# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, ubuntu-24.04]
        python-version: ['3.6', '3.7', '3.8', '3.9', '3.10', '3.11', '3.12', '3.13', '3.14.0-alpha.1', 'pypy3.9', 'pypy3.10']
        exclude:
        - os: ubuntu-24.04
          python-version: 3.6
        - os: ubuntu-24.04
          python-version: 3.7
        - os: ubuntu-20.04
          python-version: 3.8
        - os: ubuntu-20.04
          python-version: 3.9
        - os: ubuntu-20.04
          python-version: 3.10
        - os: ubuntu-20.04
          python-version: 3.11
        - os: ubuntu-20.04
          python-version: 3.12
        - os: ubuntu-20.04
          python-version: 3.13
        - os: ubuntu-20.04
          python-version: 3.14.0-alpha.1
        - os: ubuntu-20.04
          python-version: pypy3.9
        - os: ubuntu-20.04
          python-version: pypy3.10
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # For now, treat all errors as warnings using --exit-zero
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: pytest -v
